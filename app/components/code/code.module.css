@layer components {
  .code {
    --padding: var(--space2XL);

    color: var(--textBody);
    position: relative;

    @media (--mediaTablet) {
      --padding: var(--spaceXL);
    }

    @media (--mediaMobile) {
      --padding: var(--spaceL);
    }

    &::before {
      content: '';
      position: absolute;
      inset: 0;
      background-color: var(--backgroundLight);
      clip-path: polygon(0 0, calc(100% - 28px) 0, 100% 28px, 100% 100%, 0 100%);
    }

    & pre {
      transform: translateZ(0);
      overflow-x: auto;
      position: relative;
      padding: calc(var(--padding) + var(--spaceS)) var(--padding);
    }

    /* Based on the Poimandres theme */
    &[data-theme='dark'] {
      --surface: var(--backgroundLight);
      --className: var(--accent);
      --comment: color-mix(in lab, var(--textBody) 60%, transparent);
      --punctuation: var(--textBody);
      --property: var(--textBody);
      --boolean: var(--accent);
      --string: var(--accent);
      --operator: var(--primary);
      --function: var(--accent);
      --keyword: var(--primary);
      --literal: var(--textTitle);
      --falsy: var(--error);
      --char: var(--primary);
    }

    &[data-theme='light'] {
      --surface: var(--background);
      --comment: color-mix(in lab, var(--textBody) 60%, transparent);
      --keyword: var(--primary);
      --string: var(--accent);
      --boolean: var(--accent);
      --punctuation: color-mix(in lab, var(--textBody) 40%, transparent);
      --function: var(--accent);
      --className: var(--accent);
      --operator: var(--error);
      --char: var(--primary);
    }

    /* stylelint-disable selector-class-pattern */
    & :global(code),
    & :global(pre) {
      height: auto;
      font-size: var(--fontSizeBodyS);
      line-height: var(--lineHeightBody);
      white-space: pre;
    }

    & :global(.namespace) {
      opacity: 0.7;
    }

    & :global(.token.attr-name) {
      color: var(--keyword);
    }

    & :global(.token.comment),
    & :global(.token.block-comment),
    & :global(.token.prolog),
    & :global(.token.doctype),
    & :global(.token.cdata) {
      color: var(--comment);
    }

    & :global(.token.property),
    & :global(.token.number),
    & :global(.token.function-name),
    & :global(.token.constant),
    & :global(.token.symbol),
    & :global(.token.deleted) {
      color: var(--primitive);
    }

    & :global(.token.boolean) {
      color: var(--boolean);
    }

    & :global(.token.tag) {
      color: var(--tag);
    }

    & :global(.token.string) {
      color: var(--string);
    }

    & :global(.token.punctuation) {
      color: var(--punctuation);
    }

    & :global(.token.selector),
    & :global(.token.char),
    & :global(.token.builtin),
    & :global(.token.inserted) {
      color: var(--char);
    }

    & :global(.token.function) {
      color: var(--function);
    }

    & :global(.token.operator),
    & :global(.token.entity),
    & :global(.token.url),
    & :global(.token.variable) {
      color: var(--variable);
    }

    & :global(.token.attr-value) {
      color: var(--string);
    }

    & :global(.token.keyword) {
      color: var(--keyword);
    }

    & :global(.token.atrule),
    & :global(.token.class-name) {
      color: var(--className);
    }

    & :global(.token.important) {
      font-weight: var(--fontWeightRegular);
    }

    & :global(.token.bold) {
      font-weight: var(--fontWeightBold);
    }

    & :global(.token.italic) {
      font-style: italic;
    }

    & :global(.token.entity) {
      cursor: help;
    }
  }

  .actions {
    position: absolute;
    right: var(--spaceM);
    bottom: var(--spaceM);
    opacity: 0;
    transition: opacity var(--durationS) var(--bezierFastoutSlowin);

    .code:hover &,
    &:focus-within {
      opacity: 1;
    }

    @media (--mediaMobile) {
      opacity: 1;
    }
  }

  .copyIcon {
    display: grid;

    & svg {
      opacity: 0;
      grid-area: 1 / 1;
      transition-property: opacity;
      transition-duration: var(--durationS);
      transition-timing-function: var(--bezierFastoutSlowin);

      @media (--mediaUseMotion) {
        transition-property: opacity, transform;
        transform: scale(0.5);
      }
    }

    & svg[data-visible='true'] {
      opacity: 1;
      transform: none;
    }
  }

  .lang {
    font-family: var(--monoFontFamily);
    position: absolute;
    top: 0;
    left: var(--padding);
    transform: translateY(-50%);
    background: var(--background);
    padding: var(--spaceXS) var(--spaceM);
    user-select: none;
  }
}
